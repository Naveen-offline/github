import cv2
import numpy as np
import pyautogui
import time
from util import handDetector

# Screen and camera setup
wCam, hCam = 640, 480
frameR = 100  # camera frame margin
smoothening = 7
pTime = 0
plocX, plocY = 0, 0
clocX, clocY = 0, 0

cap = cv2.VideoCapture(0)
cap.set(3, wCam)
cap.set(4, hCam)
wScr, hScr = pyautogui.size()
detector = handDetector(detectionCon=0.7)

while True:
    success, img = cap.read()
    if not success:
        break
    img = detector.findHands(img)
    lmList, bbox = detector.findPosition(img)

    if len(lmList) != 0:
        x1, y1 = lmList[8][1], lmList[8][2]   # index finger tip
        x2, y2 = lmList[12][1], lmList[12][2]  # middle finger tip

        # Check which fingers are up
        fingers = detector.fingersUp()

        # üñ±Ô∏è Move Cursor: only index finger
        if fingers[1] == 1 and fingers[2] == 0:
            x3 = np.interp(x1, (frameR, wCam-frameR), (0, wScr))
            y3 = np.interp(y1, (frameR, hCam-frameR), (0, hScr))
            clocX = plocX + (x3 - plocX) / smoothening
            clocY = plocY + (y3 - plocY) / smoothening
            pyautogui.moveTo(wScr - clocX, clocY)
            plocX, plocY = clocX, clocY
            cv2.circle(img, (x1, y1), 6, (255, 28, 0), cv2.FILLED)

        # üñ±Ô∏è Click: index + middle fingers up
        if fingers[1] == 1 and fingers[2] == 1:
            length = np.hypot(x2 - x1, y2 - y1)
            if length < 40:
                cv2.circle(img, (x2, y2), 6, (0, 255, 0), cv2.FILLED)
                pyautogui.click()

    # FPS display
    cTime = time.time()
    fps = 1 / (cTime - pTime)
    pTime = cTime
    cv2.putText(img, f'FPS: {int(fps)}', (20, 50), cv2.FONT_HERSHEY_PLAIN, 2, (255, 0, 0), 2)

    cv2.imshow("Virtual Mouse", cv2.flip(img, 1))
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
